summarise_at(
.vars = player_stats_cols,
.funs = c(mean="mean")
)
View(player_mean_data)
source("~/afl_model/code.R", echo=TRUE)
player_mean_data <- df %>%
group_by(playerId) %>%
summarise_at(
.vars = player_stats_cols,
.funs = c(mean="")
)
player_mean_data <- df %>%
group_by(playerId) %>%
summarise_at(
.vars = player_stats_cols,
.funs = c(mean=" ")
)
player_mean_data <- df %>%
group_by(playerId) %>%
summarise_at(
.vars = player_stats_cols,
.funs = c(mean=" ")
)
source("~/afl_model/code.R", echo=TRUE)
source("~/afl_model/code.R", echo=TRUE)
source("~/afl_model/code.R", echo=TRUE)
source("~/afl_model/code.R", echo=TRUE)
source("~/afl_model/code.R", echo=TRUE)
source("~/afl_model/code.R", echo=TRUE)
player_mean_data <- df %>%
group_by(playerId) %>%
summarise(across(player_stats_cols, mean))
View(games)
colnames(games)
?merge
?rename
source("~/afl_model/code.R", echo=TRUE)
n_distinct(df$gameId)
min(df$year)
as.factor(player_mean_data$playerId)
player_mean_data$playerId
as.factor(player_mean_data$playerId)
as.matrix(player_mean_data)
as.matrix(player_mean_data) %>% head
as.matrix(player_mean_data) %>% head(1)
as.matrix(player_mean_data[-1]) %>% head(1)
games
View(df)
df %>%
pivot_wider(
id_cols = c('gameId', 'playerId'),
names_from = 'playerId',
values_from = 'year'
)
colnames(df)
df %>%
pivot_wider(
id_cols = c('gameId'),
names_from = 'playerId',
values_from = 'year'
)
matrix(2,3)
matrix(2,3,3)
matrix(0,3,3)
players_matrix <- matrix(0, nrow(df), nrow(player_mean_data))
players_matrix
player_idx <- seq_along(player_mean_data)
player_idx
player_idx <- seq_len(player_mean_data)
player_idx <- seq_len(nrow(player_mean_data))
player_idx
player_mean_data$idx <- seq_len(nrow(player_mean_data))
row_membership <- df %>%
merge(player_mean_data, by="playerId")
row_membership$idx
players_matrix
row_membership$idx
player_mean_data
View(player_mean_data)
row_membership$idx
row_membership <- df %>%
merge(player_mean_data[c('playerId', 'idx')], by="playerId")
View(row_membership)
games <- read.csv("afl_model/games.csv")
players <- read.csv("afl_model/players.csv")
stats <- read.csv("afl_model/stats.csv")
unique(players$position)
positions <- c("Midfield", "Forward", "Defender", "Ruck")
length(which(duplicated(stats[, c("gameId", "playerId")])))
df<- merge(stats, games[, c("homeTeam", "awayTeam", "homeTeamScore", "awayTeamScore", "gameId")], by="gameId") %>%
mutate(
team_score = ifelse(homeTeam == team, homeTeamScore, awayTeamScore),
opp_score = ifelse(homeTeam != team, homeTeamScore, awayTeamScore),
home = as.numeric(homeTeam == team)
) %>%
select(-c(homeTeam, awayTeam, homeTeamScore, awayTeamScore))
df$idx <- seq_len(nrow(df))
player_stats_cols <-c(
"Disposals", "Kicks", "Marks", "Handballs", "Goals",
"Behinds", "Hit.Outs", "Tackles", "Rebounds", "Inside.50s", "Clearances",
"Clangers", "Frees", "Frees.Against", "Brownlow.Votes", "Contested.Possessions",
"Uncontested.Possessions", "Contested.Marks", "Marks.Inside.50",
"One.Percenters", "Bounces", "Goal.Assists"
)
player_mean_data <- df %>%
group_by(playerId) %>%
summarise(across(player_stats_cols, mean))
player_mean_data$idx <- seq_len(nrow(player_mean_data))
row_membership <- df %>%
merge(player_mean_data[c('playerId', 'idx')], by="playerId")
row_membership <- df %>%
merge(player_mean_data[c('playerId', 'idx')], by="playerId") %>%
arrange(idx.x)
row_membership$idx
row_membership$idx.y
player_mean_data$idx <- seq_len(nrow(player_mean_data))
View(players_matrix)
row_membership <- df %>%
merge(player_mean_data[c('playerId', 'idx')], by="playerId") %>%
arrange(idx.x)
players_matrix <- matrix(0, nrow(df), nrow(player_mean_data))
for (i in seq_len(nrw(row_membership))) {
players_matrix[i, row_membership$idx.y[i]] <- 1
}
for (i in seq_len(nrow(row_membership))) {
players_matrix[i, row_membership$idx.y[i]] <- 1
}
players_matrix <- matrix(0, nrow(df), nrow(player_mean_data))
for (i in seq_len(nrow(row_membership))) {
players_matrix[i, row_membership$idx.y[i]] <- 1
}
player_mean_data
colnames(player_mean_data)
View(games)
home_matrix <- matrix(0, nrow(games), nrow(player_mean_data))
colnames(df)
games$idx <- seq_len(nrow(games))
home_df <- df %>%
#select(gameId) %>%
dplyr::filter(home==1)
View(home_df)
home_df <- df %>%
#select(gameId) %>%
dplyr::filter(home==1) %>%
select(c(gameId, playerId))
home_df <- df %>%
#select(gameId) %>%
dplyr::filter(home==1) %>%
select(c(gameId, playerId)) %>%
merge(games[, c('idx', 'gameId')])
games <- read.csv("afl_model/games.csv")
players <- read.csv("afl_model/players.csv")
stats <- read.csv("afl_model/stats.csv")
unique(players$position)
positions <- c("Midfield", "Forward", "Defender", "Ruck")
length(which(duplicated(stats[, c("gameId", "playerId")])))
df<- merge(stats, games[, c("homeTeam", "awayTeam", "homeTeamScore", "awayTeamScore", "gameId")], by="gameId") %>%
mutate(
team_score = ifelse(homeTeam == team, homeTeamScore, awayTeamScore),
opp_score = ifelse(homeTeam != team, homeTeamScore, awayTeamScore),
home = as.numeric(homeTeam == team)
) %>%
select(-c(homeTeam, awayTeam, homeTeamScore, awayTeamScore))
df$idx <- seq_len(nrow(df))
player_stats_cols <-c(
"Disposals", "Kicks", "Marks", "Handballs", "Goals",
"Behinds", "Hit.Outs", "Tackles", "Rebounds", "Inside.50s", "Clearances",
"Clangers", "Frees", "Frees.Against", "Brownlow.Votes", "Contested.Possessions",
"Uncontested.Possessions", "Contested.Marks", "Marks.Inside.50",
"One.Percenters", "Bounces", "Goal.Assists"
)
player_mean_data <- df %>%
group_by(playerId) %>%
summarise(across(player_stats_cols, mean))
player_mean_data$player_idx <- seq_len(nrow(player_mean_data))
games <- read.csv("afl_model/games.csv")
players <- read.csv("afl_model/players.csv")
stats <- read.csv("afl_model/stats.csv")
unique(players$position)
positions <- c("Midfield", "Forward", "Defender", "Ruck")
length(which(duplicated(stats[, c("gameId", "playerId")])))
df<- merge(stats, games[, c("homeTeam", "awayTeam", "homeTeamScore", "awayTeamScore", "gameId")], by="gameId") %>%
mutate(
team_score = ifelse(homeTeam == team, homeTeamScore, awayTeamScore),
opp_score = ifelse(homeTeam != team, homeTeamScore, awayTeamScore),
home = as.numeric(homeTeam == team)
) %>%
select(-c(homeTeam, awayTeam, homeTeamScore, awayTeamScore))
df$row_idx <- seq_len(nrow(df))
player_stats_cols <-c(
"Disposals", "Kicks", "Marks", "Handballs", "Goals",
"Behinds", "Hit.Outs", "Tackles", "Rebounds", "Inside.50s", "Clearances",
"Clangers", "Frees", "Frees.Against", "Brownlow.Votes", "Contested.Possessions",
"Uncontested.Possessions", "Contested.Marks", "Marks.Inside.50",
"One.Percenters", "Bounces", "Goal.Assists"
)
player_mean_data <- df %>%
group_by(playerId) %>%
summarise(across(player_stats_cols, mean))
player_mean_data$player_idx <- seq_len(nrow(player_mean_data))
row_membership <- df %>%
merge(player_mean_data[c('playerId', 'idx')], by="playerId") %>%
arrange(row_idx)
row_membership <- df %>%
merge(player_mean_data[c('playerId', 'player_idx')], by="playerId") %>%
arrange(row_idx)
games$game_idx <- seq_len(nrow(games))
home_matrix <- matrix(0, nrow(games), nrow(player_mean_data))
home_df <- df %>%
#select(gameId) %>%
dplyr::filter(home==1) %>%
select(c(gameId, playerId)) %>%
merge(games[, c('game_idx', 'gameId')], by='gameId') %>%
merge(player_mean_data[c('playerId', 'player_idx')])
home_df <- df %>%
#select(gameId) %>%
dplyr::filter(home==1) %>%
merge(games[, c('game_idx', 'gameId')], by='gameId') %>%
merge(player_mean_data[c('playerId', 'player_idx')], by='playerId') %>%
select(c(gameId, playerId))
home_df <- df %>%
#select(gameId) %>%
dplyr::filter(home==1) %>%
merge(games[, c('game_idx', 'gameId')], by='gameId') %>%
merge(player_mean_data[c('playerId', 'player_idx')], by='playerId') %>%
select(c(game_idx, player_idx))
home_df <- df %>%
#select(gameId) %>%
dplyr::filter(home==1) %>%
merge(games[, c('game_idx', 'gameId')], by='gameId') %>%
merge(player_mean_data[c('playerId', 'player_idx')], by='playerId') %>%
select(c(game_idx, player_idx)) %>%
arrange(player_idx, game_idx)
home_df <- df %>%
#select(gameId) %>%
dplyr::filter(home==1) %>%
merge(games[, c('game_idx', 'gameId')], by='gameId') %>%
merge(player_mean_data[c('playerId', 'player_idx')], by='playerId') %>%
select(c(game_idx, player_idx)) %>%
arrange(player_idx) %>%
mutate(player_presence = 1) %>%
pivot_wider(names_from = player_idx, values_from = player_presence)
home_df <- df %>%
#select(gameId) %>%
dplyr::filter(home==1) %>%
merge(games[, c('game_idx', 'gameId')], by='gameId') %>%
merge(player_mean_data[c('playerId', 'player_idx')], by='playerId') %>%
select(c(game_idx, player_idx)) %>%
arrange(player_idx) %>%
mutate(player_presence = 1) %>%
pivot_wider(names_from = player_idx, values_from = player_presence) %>%
replace_na(0) %>%
arrange(game_idx)
home_df <- df %>%
#select(gameId) %>%
dplyr::filter(home==1) %>%
merge(games[, c('game_idx', 'gameId')], by='gameId') %>%
merge(player_mean_data[c('playerId', 'player_idx')], by='playerId') %>%
select(c(game_idx, player_idx)) %>%
arrange(player_idx) %>%
mutate(player_presence = 1) %>%
pivot_wider(names_from = player_idx, values_from = player_presence) %>%
replace(is.na(.), 0) %>%
arrange(game_idx)
game_idx[1,]
home_df[home_df$game_idx==1]
home_df[home_df$game_idx==1,]
home_df <- df %>%
#select(gameId) %>%
dplyr::filter(home==1) %>%
merge(games[, c('game_idx', 'gameId')], by='gameId') %>%
merge(player_mean_data[c('playerId', 'player_idx')], by='playerId') %>%
select(c(game_idx, player_idx)) %>%
arrange(player_idx) %>%
mutate(player_presence = 1) %>%
pivot_wider(names_from = player_idx, values_from = player_presence) %>%
replace(is.na(.), 0) %>%
arrange(game_idx) %>%
select(-game_idx) %>%
as.matrix
which(home_df[1,])
home_df[1,]
which(home_df[1,]==1)
players[row_membership$player_idx %in% which(home_df[1,]==1), ]
row_membership$player_idx %in% which(home_df[1,]==1)
which(home_df[1,]==1)
player_mean_data[player_mean_data$player_idx %in% which(home_df[1,]==1), ]
pls_in_first_game <- player_mean_data[player_mean_data$player_idx %in% which(home_df[1,]==1), ]
View(pls_in_first_game)
home_df[1,]==1
colnames(home_df)[home_df[1,]==1]
View(player_mean_data)
player_mean_data$player_idx[player_mean_data$playerId == 2005681903]
player_mean_data$player_idx[player_mean_data$playerId == 2011676773]
shape(home_df)
dim(home_df)
nrow(games)
home_df <- df %>%
#select(gameId) %>%
dplyr::filter(home==1) %>%
merge(games[, c('game_idx', 'gameId')], by='gameId') %>%
merge(player_mean_data[c('playerId', 'player_idx')], by='playerId') %>%
select(c(game_idx, player_idx)) %>%
arrange(player_idx) %>%
mutate(player_presence = 1) %>%
pivot_wider(names_from = player_idx, values_from = player_presence) %>%
replace(is.na(.), 0) %>%
arrange(game_idx)
home_df
home_df[1,]
as.matrix(home_df[1,])
home_df[1]
home_df[,1]
home_df[1,]
t(home_df[1,])
player_mean_data$playerId[player_mean_data$player_idx==1022]
players$displayName[players$playerId == 2016827316]
home_df <- df %>%
#select(gameId) %>%
dplyr::filter(home==1)# %>%
home_df <- df %>%
#select(gameId) %>%
dplyr::filter(home==1) %>%
merge(games[, c('game_idx', 'gameId')], by='gameId') #%>%
View(games)
home_df <- df %>%
#select(gameId) %>%
dplyr::filter(home==1) %>%
merge(games[, c('game_idx', 'gameId')], by='gameId') %>%
merge(player_mean_data[c('playerId', 'player_idx')], by='playerId') %>%
select(c(game_idx, player_idx)) %>%
arrange(player_idx) %>%
mutate(player_presence = 1) %>%
pivot_wider(names_from = player_idx, values_from = player_presence) %>%
replace(is.na(.), 0) %>%
arrange(game_idx)
home_df <- df %>%
#select(gameId) %>%
dplyr::filter(home==1) %>%
merge(games[, c('game_idx', 'gameId')], by='gameId') %>%
merge(player_mean_data[c('playerId', 'player_idx')], by='playerId') %>%
select(c(game_idx, player_idx)) %>%
arrange(player_idx) %>%
mutate(player_presence = 1) %>%
pivot_wider(names_from = player_idx, values_from = player_presence) %>%
replace(is.na(.), 0) %>%
arrange(game_idx)  %>%
select(-game_idx) %>%
as.matrix
home_df[2018,]
colnames(home_df)[home_df[2018,]==1]
plids_in_fst <- colnames(home_df)[home_df[2018,]==1]
plids_in_fst <- colnames(home_df)[home_df[2018,]==1] %>% as.numeric
plids_in_fst
player_mean_data$playerId[player_mean_data$player_idx %in% plids_in_fst]
ids_in_fst <- player_mean_data$playerId[player_mean_data$player_idx %in% plids_in_fst]
players$displayName[players$playerId %in% ids_in_fst]
source("~/afl_model/code.R", echo=TRUE)
gc()
library(tidyverse)
library(rstan)
library(parallel)
games <- read.csv("afl_model/games.csv")
games$game_idx <- seq_len(nrow(games))
players <- read.csv("afl_model/players.csv")
players$player_idx <- seq_len(nrow(players))
stats <- read.csv("afl_model/stats.csv")
stats$row_idx <- seq_len(nrow(stats))
length(which(duplicated(stats[, c("gameId", "playerId")])))
df<- merge(stats, games[, c("homeTeam", "awayTeam", "homeTeamScore", "awayTeamScore", "gameId")], by="gameId") %>%
mutate(
team_score = ifelse(homeTeam == team, homeTeamScore, awayTeamScore),
opp_score = ifelse(homeTeam != team, homeTeamScore, awayTeamScore),
home = as.numeric(homeTeam == team)
) %>%
select(-c(homeTeam, awayTeam, homeTeamScore, awayTeamScore)) %>%
arrange(row_idx)
player_stats_cols <-c(
"Disposals", "Kicks", "Marks", "Handballs", "Goals",
"Behinds", "Hit.Outs", "Tackles", "Rebounds", "Inside.50s", "Clearances",
"Clangers", "Frees", "Frees.Against", "Brownlow.Votes", "Contested.Possessions",
"Uncontested.Possessions", "Contested.Marks", "Marks.Inside.50",
"One.Percenters", "Bounces", "Goal.Assists"
)
player_mean_data <- df %>%
group_by(playerId) %>%
summarise(across(player_stats_cols, mean)) %>%
merge(players[, c('playerId', 'player_idx')]) %>%
arrange(player_idx)
row_membership <- (df %>%
merge(players[c('playerId', 'player_idx')], by="playerId") %>%
arrange(row_idx))$player_idx
home_df <- df %>%
merge(games[, c('game_idx', 'gameId')], by='gameId') %>%
merge(players[, c('playerId', 'player_idx')], by='playerId') %>%
select(c(game_idx, player_idx, home)) %>%
arrange(player_idx) %>%
pivot_wider(names_from = player_idx, values_from = home) %>%
arrange(game_idx)  %>%
select(-game_idx) %>%
replace(is.na(.), 0) %>%
as.matrix
away_df <- df %>%
merge(games[, c('game_idx', 'gameId')], by='gameId') %>%
merge(player_mean_data[, c('playerId', 'player_idx')], by='playerId') %>%
select(c(game_idx, player_idx, home)) %>%
mutate(home = 1-home) %>%
arrange(player_idx) %>%
pivot_wider(names_from = player_idx, values_from = home) %>%
arrange(game_idx)  %>%
select(-game_idx) %>%
replace(is.na(.), 0) %>%
as.matrix
model_fit <- stan(
file = "afl_model/model.stan",
cores = parallel::detectCores(),
data = list(
K = length(player_stats_cols),
N_data = nrow(df),
N_players = nrow(player_mean_data),
N_games = n_distinct(df$gameId),
player = row_membership,
player_data = as.matrix(player_mean_data[, player_stats_cols]),
home = home_df,
away = away_df,
deficit = games$homeTeamScore - games$awayTeamScore
)
)
scale(as.matrix(player_mean_data[, player_stats_cols]))
jj <- scale(as.matrix(player_mean_data[, player_stats_cols]))
jj
mean(jj)
lapply(as.data.frame(jj), mean)
lapply(as.data.frame(jj), sd)
model_fit <- stan(
file = "afl_model/model.stan",
cores = parallel::detectCores(),
data = list(
K = length(player_stats_cols),
N_data = nrow(df),
N_players = nrow(player_mean_data),
N_games = n_distinct(df$gameId),
player = row_membership,
player_data = player_mean_data[, player_stats_cols] %>%
as.matrix %>%
scale,
home = home_df,
away = away_df,
deficit = games$homeTeamScore - games$awayTeamScore
)
)
model_fit <- stan(
file = "afl_model/model.stan",
cores = parallel::detectCores(),
data = list(
K = length(player_stats_cols),
N_data = nrow(df),
N_players = nrow(player_mean_data),
N_games = n_distinct(df$gameId),
player = row_membership,
player_data = player_mean_data[, player_stats_cols] %>%
as.matrix %>%
scale,
home = home_df,
away = away_df,
deficit = games$homeTeamScore - games$awayTeamScore
)
)
model_fit <- stan(
file = "afl_model/model.stan",
cores = parallel::detectCores(),
data = list(
K = length(player_stats_cols),
N_data = nrow(df),
N_players = nrow(player_mean_data),
N_games = n_distinct(df$gameId),
player = row_membership,
player_data = player_mean_data[, player_stats_cols] %>%
as.matrix %>%
scale,
home = home_df,
away = away_df,
deficit = games$homeTeamScore - games$awayTeamScore
)
)
setwd("data_projects/afl_model")
source("~/data_projects/afl_model/main.R", echo=TRUE)
library(tidyverse)
library(rstan)
library(parallel)
source("code/load_data.R")
games <- get_file("data/games.csv", "game", years=2012:2013)
players <- get_file("data/players.csv", "player", years=2012:2013)
stats <- get_file("data/stats.csv", "row", years=2012:2013)
length(which(duplicated(stats[, c("gameId", "playerId")])))
df <- get_main_df(stats, games)
player_stats_cols <-c(
"Disposals", "Kicks", "Marks", "Handballs", "Goals",
"Behinds", "Hit.Outs", "Tackles", "Rebounds", "Inside.50s", "Clearances",
"Clangers", "Frees", "Frees.Against", "Brownlow.Votes", "Contested.Possessions",
"Uncontested.Possessions", "Contested.Marks", "Marks.Inside.50",
"One.Percenters", "Bounces", "Goal.Assists"
)
player_mean_data <- get_player_data(df, player_stats_cols, players)
source("code/feature_gen.R")
home <- get_presence_matrix(df, games, players)
away <- get_presence_matrix(df, games, players, is_away=1)
player_matrix <- get_player_matrix(player_mean_data, player_stats_cols)
stan_input <- get_stan_input(player_matrix, home, away, games)
source("code/train_model.R")
away
