}
players_matrix <- matrix(0, nrow(df), nrow(player_mean_data))
for (i in seq_len(nrow(row_membership))) {
players_matrix[i, row_membership$idx.y[i]] <- 1
}
player_mean_data
colnames(player_mean_data)
View(games)
home_matrix <- matrix(0, nrow(games), nrow(player_mean_data))
colnames(df)
games$idx <- seq_len(nrow(games))
home_df <- df %>%
#select(gameId) %>%
dplyr::filter(home==1)
View(home_df)
home_df <- df %>%
#select(gameId) %>%
dplyr::filter(home==1) %>%
select(c(gameId, playerId))
home_df <- df %>%
#select(gameId) %>%
dplyr::filter(home==1) %>%
select(c(gameId, playerId)) %>%
merge(games[, c('idx', 'gameId')])
games <- read.csv("afl_model/games.csv")
players <- read.csv("afl_model/players.csv")
stats <- read.csv("afl_model/stats.csv")
unique(players$position)
positions <- c("Midfield", "Forward", "Defender", "Ruck")
length(which(duplicated(stats[, c("gameId", "playerId")])))
df<- merge(stats, games[, c("homeTeam", "awayTeam", "homeTeamScore", "awayTeamScore", "gameId")], by="gameId") %>%
mutate(
team_score = ifelse(homeTeam == team, homeTeamScore, awayTeamScore),
opp_score = ifelse(homeTeam != team, homeTeamScore, awayTeamScore),
home = as.numeric(homeTeam == team)
) %>%
select(-c(homeTeam, awayTeam, homeTeamScore, awayTeamScore))
df$idx <- seq_len(nrow(df))
player_stats_cols <-c(
"Disposals", "Kicks", "Marks", "Handballs", "Goals",
"Behinds", "Hit.Outs", "Tackles", "Rebounds", "Inside.50s", "Clearances",
"Clangers", "Frees", "Frees.Against", "Brownlow.Votes", "Contested.Possessions",
"Uncontested.Possessions", "Contested.Marks", "Marks.Inside.50",
"One.Percenters", "Bounces", "Goal.Assists"
)
player_mean_data <- df %>%
group_by(playerId) %>%
summarise(across(player_stats_cols, mean))
player_mean_data$player_idx <- seq_len(nrow(player_mean_data))
games <- read.csv("afl_model/games.csv")
players <- read.csv("afl_model/players.csv")
stats <- read.csv("afl_model/stats.csv")
unique(players$position)
positions <- c("Midfield", "Forward", "Defender", "Ruck")
length(which(duplicated(stats[, c("gameId", "playerId")])))
df<- merge(stats, games[, c("homeTeam", "awayTeam", "homeTeamScore", "awayTeamScore", "gameId")], by="gameId") %>%
mutate(
team_score = ifelse(homeTeam == team, homeTeamScore, awayTeamScore),
opp_score = ifelse(homeTeam != team, homeTeamScore, awayTeamScore),
home = as.numeric(homeTeam == team)
) %>%
select(-c(homeTeam, awayTeam, homeTeamScore, awayTeamScore))
df$row_idx <- seq_len(nrow(df))
player_stats_cols <-c(
"Disposals", "Kicks", "Marks", "Handballs", "Goals",
"Behinds", "Hit.Outs", "Tackles", "Rebounds", "Inside.50s", "Clearances",
"Clangers", "Frees", "Frees.Against", "Brownlow.Votes", "Contested.Possessions",
"Uncontested.Possessions", "Contested.Marks", "Marks.Inside.50",
"One.Percenters", "Bounces", "Goal.Assists"
)
player_mean_data <- df %>%
group_by(playerId) %>%
summarise(across(player_stats_cols, mean))
player_mean_data$player_idx <- seq_len(nrow(player_mean_data))
row_membership <- df %>%
merge(player_mean_data[c('playerId', 'idx')], by="playerId") %>%
arrange(row_idx)
row_membership <- df %>%
merge(player_mean_data[c('playerId', 'player_idx')], by="playerId") %>%
arrange(row_idx)
games$game_idx <- seq_len(nrow(games))
home_matrix <- matrix(0, nrow(games), nrow(player_mean_data))
home_df <- df %>%
#select(gameId) %>%
dplyr::filter(home==1) %>%
select(c(gameId, playerId)) %>%
merge(games[, c('game_idx', 'gameId')], by='gameId') %>%
merge(player_mean_data[c('playerId', 'player_idx')])
home_df <- df %>%
#select(gameId) %>%
dplyr::filter(home==1) %>%
merge(games[, c('game_idx', 'gameId')], by='gameId') %>%
merge(player_mean_data[c('playerId', 'player_idx')], by='playerId') %>%
select(c(gameId, playerId))
home_df <- df %>%
#select(gameId) %>%
dplyr::filter(home==1) %>%
merge(games[, c('game_idx', 'gameId')], by='gameId') %>%
merge(player_mean_data[c('playerId', 'player_idx')], by='playerId') %>%
select(c(game_idx, player_idx))
home_df <- df %>%
#select(gameId) %>%
dplyr::filter(home==1) %>%
merge(games[, c('game_idx', 'gameId')], by='gameId') %>%
merge(player_mean_data[c('playerId', 'player_idx')], by='playerId') %>%
select(c(game_idx, player_idx)) %>%
arrange(player_idx, game_idx)
home_df <- df %>%
#select(gameId) %>%
dplyr::filter(home==1) %>%
merge(games[, c('game_idx', 'gameId')], by='gameId') %>%
merge(player_mean_data[c('playerId', 'player_idx')], by='playerId') %>%
select(c(game_idx, player_idx)) %>%
arrange(player_idx) %>%
mutate(player_presence = 1) %>%
pivot_wider(names_from = player_idx, values_from = player_presence)
home_df <- df %>%
#select(gameId) %>%
dplyr::filter(home==1) %>%
merge(games[, c('game_idx', 'gameId')], by='gameId') %>%
merge(player_mean_data[c('playerId', 'player_idx')], by='playerId') %>%
select(c(game_idx, player_idx)) %>%
arrange(player_idx) %>%
mutate(player_presence = 1) %>%
pivot_wider(names_from = player_idx, values_from = player_presence) %>%
replace_na(0) %>%
arrange(game_idx)
home_df <- df %>%
#select(gameId) %>%
dplyr::filter(home==1) %>%
merge(games[, c('game_idx', 'gameId')], by='gameId') %>%
merge(player_mean_data[c('playerId', 'player_idx')], by='playerId') %>%
select(c(game_idx, player_idx)) %>%
arrange(player_idx) %>%
mutate(player_presence = 1) %>%
pivot_wider(names_from = player_idx, values_from = player_presence) %>%
replace(is.na(.), 0) %>%
arrange(game_idx)
game_idx[1,]
home_df[home_df$game_idx==1]
home_df[home_df$game_idx==1,]
home_df <- df %>%
#select(gameId) %>%
dplyr::filter(home==1) %>%
merge(games[, c('game_idx', 'gameId')], by='gameId') %>%
merge(player_mean_data[c('playerId', 'player_idx')], by='playerId') %>%
select(c(game_idx, player_idx)) %>%
arrange(player_idx) %>%
mutate(player_presence = 1) %>%
pivot_wider(names_from = player_idx, values_from = player_presence) %>%
replace(is.na(.), 0) %>%
arrange(game_idx) %>%
select(-game_idx) %>%
as.matrix
which(home_df[1,])
home_df[1,]
which(home_df[1,]==1)
players[row_membership$player_idx %in% which(home_df[1,]==1), ]
row_membership$player_idx %in% which(home_df[1,]==1)
which(home_df[1,]==1)
player_mean_data[player_mean_data$player_idx %in% which(home_df[1,]==1), ]
pls_in_first_game <- player_mean_data[player_mean_data$player_idx %in% which(home_df[1,]==1), ]
View(pls_in_first_game)
home_df[1,]==1
colnames(home_df)[home_df[1,]==1]
View(player_mean_data)
player_mean_data$player_idx[player_mean_data$playerId == 2005681903]
player_mean_data$player_idx[player_mean_data$playerId == 2011676773]
shape(home_df)
dim(home_df)
nrow(games)
home_df <- df %>%
#select(gameId) %>%
dplyr::filter(home==1) %>%
merge(games[, c('game_idx', 'gameId')], by='gameId') %>%
merge(player_mean_data[c('playerId', 'player_idx')], by='playerId') %>%
select(c(game_idx, player_idx)) %>%
arrange(player_idx) %>%
mutate(player_presence = 1) %>%
pivot_wider(names_from = player_idx, values_from = player_presence) %>%
replace(is.na(.), 0) %>%
arrange(game_idx)
home_df
home_df[1,]
as.matrix(home_df[1,])
home_df[1]
home_df[,1]
home_df[1,]
t(home_df[1,])
player_mean_data$playerId[player_mean_data$player_idx==1022]
players$displayName[players$playerId == 2016827316]
home_df <- df %>%
#select(gameId) %>%
dplyr::filter(home==1)# %>%
home_df <- df %>%
#select(gameId) %>%
dplyr::filter(home==1) %>%
merge(games[, c('game_idx', 'gameId')], by='gameId') #%>%
View(games)
home_df <- df %>%
#select(gameId) %>%
dplyr::filter(home==1) %>%
merge(games[, c('game_idx', 'gameId')], by='gameId') %>%
merge(player_mean_data[c('playerId', 'player_idx')], by='playerId') %>%
select(c(game_idx, player_idx)) %>%
arrange(player_idx) %>%
mutate(player_presence = 1) %>%
pivot_wider(names_from = player_idx, values_from = player_presence) %>%
replace(is.na(.), 0) %>%
arrange(game_idx)
home_df <- df %>%
#select(gameId) %>%
dplyr::filter(home==1) %>%
merge(games[, c('game_idx', 'gameId')], by='gameId') %>%
merge(player_mean_data[c('playerId', 'player_idx')], by='playerId') %>%
select(c(game_idx, player_idx)) %>%
arrange(player_idx) %>%
mutate(player_presence = 1) %>%
pivot_wider(names_from = player_idx, values_from = player_presence) %>%
replace(is.na(.), 0) %>%
arrange(game_idx)  %>%
select(-game_idx) %>%
as.matrix
home_df[2018,]
colnames(home_df)[home_df[2018,]==1]
plids_in_fst <- colnames(home_df)[home_df[2018,]==1]
plids_in_fst <- colnames(home_df)[home_df[2018,]==1] %>% as.numeric
plids_in_fst
player_mean_data$playerId[player_mean_data$player_idx %in% plids_in_fst]
ids_in_fst <- player_mean_data$playerId[player_mean_data$player_idx %in% plids_in_fst]
players$displayName[players$playerId %in% ids_in_fst]
source("~/afl_model/code.R", echo=TRUE)
gc()
library(tidyverse)
library(rstan)
library(parallel)
games <- read.csv("afl_model/games.csv")
games$game_idx <- seq_len(nrow(games))
players <- read.csv("afl_model/players.csv")
players$player_idx <- seq_len(nrow(players))
stats <- read.csv("afl_model/stats.csv")
stats$row_idx <- seq_len(nrow(stats))
length(which(duplicated(stats[, c("gameId", "playerId")])))
df<- merge(stats, games[, c("homeTeam", "awayTeam", "homeTeamScore", "awayTeamScore", "gameId")], by="gameId") %>%
mutate(
team_score = ifelse(homeTeam == team, homeTeamScore, awayTeamScore),
opp_score = ifelse(homeTeam != team, homeTeamScore, awayTeamScore),
home = as.numeric(homeTeam == team)
) %>%
select(-c(homeTeam, awayTeam, homeTeamScore, awayTeamScore)) %>%
arrange(row_idx)
player_stats_cols <-c(
"Disposals", "Kicks", "Marks", "Handballs", "Goals",
"Behinds", "Hit.Outs", "Tackles", "Rebounds", "Inside.50s", "Clearances",
"Clangers", "Frees", "Frees.Against", "Brownlow.Votes", "Contested.Possessions",
"Uncontested.Possessions", "Contested.Marks", "Marks.Inside.50",
"One.Percenters", "Bounces", "Goal.Assists"
)
player_mean_data <- df %>%
group_by(playerId) %>%
summarise(across(player_stats_cols, mean)) %>%
merge(players[, c('playerId', 'player_idx')]) %>%
arrange(player_idx)
row_membership <- (df %>%
merge(players[c('playerId', 'player_idx')], by="playerId") %>%
arrange(row_idx))$player_idx
home_df <- df %>%
merge(games[, c('game_idx', 'gameId')], by='gameId') %>%
merge(players[, c('playerId', 'player_idx')], by='playerId') %>%
select(c(game_idx, player_idx, home)) %>%
arrange(player_idx) %>%
pivot_wider(names_from = player_idx, values_from = home) %>%
arrange(game_idx)  %>%
select(-game_idx) %>%
replace(is.na(.), 0) %>%
as.matrix
away_df <- df %>%
merge(games[, c('game_idx', 'gameId')], by='gameId') %>%
merge(player_mean_data[, c('playerId', 'player_idx')], by='playerId') %>%
select(c(game_idx, player_idx, home)) %>%
mutate(home = 1-home) %>%
arrange(player_idx) %>%
pivot_wider(names_from = player_idx, values_from = home) %>%
arrange(game_idx)  %>%
select(-game_idx) %>%
replace(is.na(.), 0) %>%
as.matrix
model_fit <- stan(
file = "afl_model/model.stan",
cores = parallel::detectCores(),
data = list(
K = length(player_stats_cols),
N_data = nrow(df),
N_players = nrow(player_mean_data),
N_games = n_distinct(df$gameId),
player = row_membership,
player_data = as.matrix(player_mean_data[, player_stats_cols]),
home = home_df,
away = away_df,
deficit = games$homeTeamScore - games$awayTeamScore
)
)
scale(as.matrix(player_mean_data[, player_stats_cols]))
jj <- scale(as.matrix(player_mean_data[, player_stats_cols]))
jj
mean(jj)
lapply(as.data.frame(jj), mean)
lapply(as.data.frame(jj), sd)
model_fit <- stan(
file = "afl_model/model.stan",
cores = parallel::detectCores(),
data = list(
K = length(player_stats_cols),
N_data = nrow(df),
N_players = nrow(player_mean_data),
N_games = n_distinct(df$gameId),
player = row_membership,
player_data = player_mean_data[, player_stats_cols] %>%
as.matrix %>%
scale,
home = home_df,
away = away_df,
deficit = games$homeTeamScore - games$awayTeamScore
)
)
model_fit <- stan(
file = "afl_model/model.stan",
cores = parallel::detectCores(),
data = list(
K = length(player_stats_cols),
N_data = nrow(df),
N_players = nrow(player_mean_data),
N_games = n_distinct(df$gameId),
player = row_membership,
player_data = player_mean_data[, player_stats_cols] %>%
as.matrix %>%
scale,
home = home_df,
away = away_df,
deficit = games$homeTeamScore - games$awayTeamScore
)
)
model_fit <- stan(
file = "afl_model/model.stan",
cores = parallel::detectCores(),
data = list(
K = length(player_stats_cols),
N_data = nrow(df),
N_players = nrow(player_mean_data),
N_games = n_distinct(df$gameId),
player = row_membership,
player_data = player_mean_data[, player_stats_cols] %>%
as.matrix %>%
scale,
home = home_df,
away = away_df,
deficit = games$homeTeamScore - games$awayTeamScore
)
)
player_stats_cols
#q1ai
uw <- function(w) w - 6*w^2
uw(50000)
#q1ai
uw <- function(w) (w/1000000) - 6*(w/1000000)^2
uw(50000)
bm <- c(1.6, 1.2, .6)
bp <- c(.2, .7, .1)
bm*50000
sapply(bm*50000, uw)
sum(bp*sapply(bm*50000, uw))
sum(bp*sapply(bm*50000, uw))
cm <- c(1.3, 1.2)
cp <- c(.5, .5)
sum(cp*sapply(cm*50000, uw))
B <- 4
uw <- function(w) (w/1000000) - 6*(w/1000000)^2
w <- 65000+B*1000
uw(50000+w)
bm <- c((1.6 + A/100), 1.2, .6)
bp <- c(.2, .7, .1)
sum(bp*sapply(bm*50000, function(x) uw(w+x)))
cm <- c(1.3, 1.2)
cp <- c(.5, .5)
sum(cp*sapply(cm*50000, function(x) uw(w+x)))
A <- 0
uw <- function(w) (w/1000000) - 6*(w/1000000)^2
uw(50000)
bm <- c((1.6 + A/100), 1.2, .6)
bp <- c(.2, .7, .1)
sum(bp*sapply(bm*50000, uw))
cm <- c(1.3, 1.2)
cp <- c(.5, .5)
sum(cp*sapply(cm*50000, uw))
B <- 4
uw <- function(w) (w/1000000) - 6*(w/1000000)^2
w <- 65000+B*1000
uw(50000+w)
bm <- c((1.6 + A/100), 1.2, .6)
bp <- c(.2, .7, .1)
sum(bp*sapply(bm*50000, function(x) uw(w+x)))
cm <- c(1.3, 1.2)
cp <- c(.5, .5)
sum(cp*sapply(cm*50000, function(x) uw(w+x)))
w
.5*uw(1.3*50000+69000) + .5*uw(1.2*50000 + 69000)
D <- 0
E <- 3
alpha <- 24350+D
theta <- .25
qa <- .02
bv <- c(1000, 3000)
bp <- c(.6, .4)
qb <-0.01+E/1000
mub <- sum(bv*bp)
mua <- alpha*theta
100*qa*mua + 200*qb*mub
bv^2
OPTIONS(SCIPEN=999)
options(scipen=999)
100*qa*(sa+(1-qa)*mua^2) + 200*qb*(sb+(1-qb)*mub^2)
sa <- alpha*theta^2
sb <- sum(bp*bv^2)
100*qa*(sa+(1-qa)*mua^2) + 200*qb*(sb+(1-qb)*mub^2)
sqrt(100*qa*(sa+(1-qa)*mua^2) + 200*qb*(sb+(1-qb)*mub^2))*qnorm(.99)+100*qa*mua+200*qb*mub
100*qa*(sa+(1-qa)*mua^2) + 200*qb*(sb+(1-qb)*mub^2)
100*qa*(sa+(1-qa)*mua^2) + 200*qb*(sb+(1-qb)*mub^2) + 100*qa^2*mua^2 + 200*qb^2*mub^2
100*qa+200*qb
100*qa/4.6
(100*qa/4.6)*alpha*theta^3*(alpha+1)*(alpha+2) + (200*qb/4.6)*sum(bp*bv^3)
((100*qa/4.6)*alpha*theta^3*(alpha+1)*(alpha+2) + (200*qb/4.6)*sum(bp*bv^3))*4.6/(93462356^1.5)
pst <- ((100*qa/4.6)*alpha*theta^3*(alpha+1)*(alpha+2) + (200*qb/4.6)*sum(bp*bv^3))*4.6/(93462356^1.5)
pst
vst <- 93462356
100*qa*mua + 200*qb*mub
est <- 16855
alpha_g <- (2/pst)^2
pst <- ((100*qa/4.6)*alpha*theta^3*(alpha+1)*(alpha+2) + (200*qb/4.6)*sum(bp*bv^3))*4.6/(93462356^1.5)
vst <- 93462356
est <- 16855
alpha_g <- (2/pst)^2
theta_g <- sqrt(vst/alpha_g)
k <- est - alpha_g*theta_g
k
alpha_g
theta_g
alpha_g*theta_g
alpha_g*theta_g+k
alpha_g*theta_g^2
100*qa*(sa+(1-qa)*mua^2) + 200*qb*(sb+(1-qb)*mub^2)
8.889*2
alpha_g*2
theta_g
qchisq(.99, df=alpha_g*2)
qchisq(.99, df=alpha_g*2)*theta_g/2 +
k
dpois(5, 5)
dpois(4, 5)
dpois(3, 5)
dpois(0,5)
exp(-5)
dpois(2, lambda=5)*2*.7*(.16+A/100)
dpois(2, lambda=5)*2*.7*(.16+A/100) + dpois(2, lambda=5)*.7^6
gamma(2)
gamma(5)
muk <- function(k) 2*(k/1)*gamma(k+1)
muk(1)
muk(2)
.05+B/100
100*.09*(muk(2)-.09*muk(1)^2)
(1/3)*(1/3) + (1/3)*(1/5) + (1/3)*(1/7)
sum(1/(3*c(3,5,7)))
mx <- function(r) (1/3)*(3/(3-r)) + (1/3)*(5/(5-r)) + (1/3)*(7/(7-r))
mx(5)
mx(2)
mx(3)
mx(1.15)
mx(2.8)
mx(2.999)
mx(2.9999)
mx(2.99999999)
hr <- function(r) mx(r)-1-1.4*r*sum(1/(3*c(3,5,7)))
hr(1)
hr(2)
uniroot(hr)
uniroot(hr, (1, 2))
uniroot(hr, c(1, 2))
hr(1.084955)
hr(1.084959)
hr(1.084953)
hr(1.084955)
sum(2/(c(9,25,49)*3))
2/(9*3) + 2/(25*3) + 2/(49*3)
2*.4*sum(1/(3*c(3,5,7)))/sum(2/(c(9,25,49)*3))
2*.4*1*2/(2 + 4)
(1/28)(23-sqrt(305))
(1/28)*(23-sqrt(305))
exp(-(1/28)*(23-sqrt(305))
)
exp(-(1/28)*(23-sqrt(305))*18)
library(purrr)
???walk
??walk
rep('=', 50)
rep('=', 25)
source("~/data_projects/afl_model/main.R", echo=TRUE)
setwd("data_projects/afl_model")
source("~/data_projects/afl_model/main.R", echo=TRUE)
View(avgs_mean_sd)
View(scaled_avgs)
player_stats_cosl
player_stats_cols
